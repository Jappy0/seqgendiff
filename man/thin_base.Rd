% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/genthin.R
\name{thin_base}
\alias{thin_base}
\title{Base Poisson thinning function.}
\usage{
thin_base(mat, designmat, coefmat, relative = TRUE)
}
\arguments{
\item{mat}{A numeric matrix of counts. The rows index the genes and the
columns index the samples (as is usual in RNA-seq).}

\item{designmat}{A design matrix. The rows index the samples and the columns
index the variables. The intercept should \emph{not} be included.}

\item{coefmat}{A matrix of coefficients. The rows index the genes and the
columns index the samples.}

\item{relative}{A logical. Should we apply relative thinning (\code{TRUE})
or absolute thinning (\code{FALSE}). Only experts should change
the default.}
}
\description{
Given a matrix of counts (\eqn{Y}), a design matrix (\eqn{X}),
and a matrix of coefficients (\eqn{B}), \code{thin_diff} will generate a new
matrix of counts such that \eqn{E[log_2(Y)] \approx BX' + u1'}, where
\eqn{u} is some vector of intercept coefficients. This
function is used by all other thinning functions.
}
\examples{
## Simulate data from given matrix of counts
## In practice, you would obtain Y from a real dataset, not simulate it.
set.seed(1)
nsamp <- 10
ngene <- 1000
Y <- matrix(stats::rpois(nsamp * ngene, lambda = 100), nrow = ngene)
X <- matrix(rep(c(0, 1), length.out = nsamp))
B <- matrix(seq(3, 0, length.out = ngene))
Ynew <- thin_base(mat = Y, designmat = X, coefmat = B)

## Demonstrate how the log2 effect size is B
Bhat <- coefficients(lm(t(log2(Ynew)) ~ X))["X", ]
plot(B, Bhat, xlab = "Coefficients", ylab = "Coefficient Estimates")
abline(0, 1, col = 2, lwd = 2)

}
\author{
David Gerard
}
